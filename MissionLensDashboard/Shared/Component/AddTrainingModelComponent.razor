@using Microsoft.AspNetCore.Components.Forms

<div class="modal fade @(IsOpen ? "show d-block" : "")" tabindex="-1" style="background-color: rgba(0,0,0,0.5);">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content p-3 rounded-3">

            <!-- Header -->
            <div class="modal-header border-0">
                <h5 class="modal-title">Add Training Model</h5>
                <button type="button" class="btn-close" @onclick="Close"></button>
            </div>

            <!-- Body -->
            <div class="modal-body">
                <EditForm Model="NewModel" OnValidSubmit="HandleValidSubmit">
                    <DataAnnotationsValidator />
                    <ValidationSummary />


                    <!-- Name & Email -->
                    <div class="row mb-3">
                        <div class="col">
                            <label>Question</label>
                            <InputText class="form-control shadow-sm rounded hover:border-green-500 border-input" @bind-Value="NewModel.Question" />
                        </div>
                    </div> 
                    <div class="row mb-3">
                        <div class="col">
                            <label>Answer</label>
                            <InputTextArea class="form-control shadow-sm rounded hover:border-green-500 border-input" @bind-Value="NewModel.Answer" />
                        </div>
                    </div>
                    <div class="row mb-3">
                        <div class="col">
                            <label>Related Document</label>
                            <InputTextArea class="form-control shadow-sm rounded hover:border-green-500 border-input" @bind-Value="NewModel.EmbeddingsGenerated" />
                        </div>
                    </div>
                    @*  <!-- Phone & Title -->
                    <div class="row mb-3">
                        <div class="col">
                            <label>Phone</label>
                            <InputText class="form-control shadow-sm rounded hover:border-green-500 border-input" @bind-Value="NewUser.Phone" />
                        </div>
                        <div class="col">
                            <label>Title</label>
                            <InputText class="form-control shadow-sm rounded hover:border-green-500 border-input" @bind-Value="NewUser.Title" />
                        </div>
                    </div>

                    <!-- Password & Confirm -->
                    <div class="row mb-3">
                        <div class="col">
                            <label>Password</label>
                            <InputText class="form-control shadow-sm rounded hover:border-green-500 border-input" @bind-Value="NewUser.Password" type="password" />
                        </div>
                        <div class="col">
                            <label>Retype Password</label>
                            <InputText class="form-control shadow-sm rounded hover:border-green-500 border-input" @bind-Value="NewUser.ConfirmPassword" type="password" />
                        </div>
                    </div> *@

                    <!-- Save Button -->
                    <div class="text-center">
                        <button type="submit" class="btn btn-success rounded-pill px-5"><i class="oi oi-file"></i>Save</button>
                    </div>
                </EditForm>
            </div>
        </div>
    </div>
</div>



@using MissionLensDashboard.Data
@code {
    [Parameter] public bool IsOpen { get; set; }
    [Parameter] public EventCallback<bool> IsOpenChanged { get; set; }
    [Parameter] public EventCallback<TrainingManagementModel> OnSave { get; set; }

    private TrainingManagementModel NewModel { get; set; } = new();

    private void Close()
    {
        IsOpen = false;
        IsOpenChanged.InvokeAsync(false);
    }

    private async Task HandleValidSubmit()
    {
        await OnSave.InvokeAsync(NewModel);
        Close();
    }


}